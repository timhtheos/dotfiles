# #!/bin/bash
# 
# PHPCS_BIN="phpcs";
# TMP_STAGING=".tmp_staging";
# PHPCS_IGNORE="features.field_instance.inc";
# 
# # Stolen from template file.
# if git rev-parse --verify HEAD >/dev/null 2>&1;
# then
#   against=HEAD
# else
#   # Initial commit: diff against an empty tree object.
#   against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
# fi
# 
# # This is the magic: 
# # Retrieve all files in staging area that are added, modified or renamed but no deletions etc.
# FILES=$(git diff-index --name-only --cached --diff-filter=ACMR $against --);
# 
# if [[ "$FILES" == "" ]];
# then
#   exit 0;
# fi
# 
# # Create temporary copy of staging area.
# if [ -e $TMP_STAGING ];
# then
#   rm -rf $TMP_STAGING;
# fi
# 
# mkdir $TMP_STAGING;
# 
# # Match files against whitelist.
# FILES_TO_CHECK="";
# for FILE in $FILES;
# do
#   echo "$FILE" | egrep -q "\.(php|module|inc|install|test|profile|theme|info|txt)$";
#   RETVAL=$?;
#   if [[ "$RETVAL" -eq "0" ]];
#   then
#     FILES_TO_CHECK="$FILES_TO_CHECK $FILE";
#   fi
# done
# 
# if [[ "$FILES_TO_CHECK" == "" ]];
# then
#   exit 0;
# fi
# 
# # Execute the code sniffer.
# if [ "$PHPCS_IGNORE" != "" ];
# then
#   IGNORE="--ignore=$PHPCS_IGNORE";
# else
#   IGNORE="";
# fi
# 
# # Copy contents of staged version of files to temporary staging area
# # because we only want the staged version that will be commited and not
# # the version in the working directory.
# STAGED_FILES="";
# for FILE in $FILES_TO_CHECK;
# do
#   ID=$(git diff-index --cached $against $FILE | cut -d " " -f4);
# 
#   # Create staged version of file in temporary staging area with the same
#   # path as the original file so that the phpcs ignore filters can be applied.
#   mkdir -p "$TMP_STAGING/$( dirname $FILE )";
#   git cat-file blob $ID > "$TMP_STAGING/$FILE";
#   STAGED_FILES="$STAGED_FILES $TMP_STAGING/$FILE";
# done
# 
# OUTPUT=$($PHPCS_BIN --standard=Drupal --extensions="php,module,inc,install,test,profile,theme,info,txt" $STAGED_FILES $IGNORE);
# RETVAL=$?;
# 
# # Delete temporary copy of staging area.
# rm -rf $TMP_STAGING;
# 
# if [ $RETVAL -ne 0 ];
# then
#   echo "$OUTPUT" | less;
# fi
# 
# exit $RETVAL;
